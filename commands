#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$(dirname $0)/../common/functions"

PHASES=(build deploy run)

FILE_PREFIX="DOCKER_OPTIONS_"

verify_phase() {
  for phase in "${PHASES[@]}"; do
    if [[ "$phase" = "$1" ]]; then
      return 0
    fi
  done

  dokku_log_fail "Phase must be one of [${PHASES[@]}]"
}

create_phase_file_path() {
  phase_file_path="${DOKKU_ROOT}/${APP}/${FILE_PREFIX}${PHASE^^}"
}

create_file() {
  [[ -f $phase_file_path ]] || {
    touch $phase_file_path
  }
}

display_options() {
  echo "${phase^} options:"
  cat $phase_file_path | sed -e 's/^/    /'
}

case "$1" in
  # Display applications docker options
  docker-options)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    verify_app_name "$2"
    APP="$2"

    if [[ -z $3 ]]; then
      for phase in "${PHASES[@]}"; do
        PHASE=$phase

        create_phase_file_path

        if [[ -s $phase_file_path ]] ; then
          display_options
        fi
      done
    else
      verify_phase "$3"
      PHASE="$3"

      create_phase_file_path

      if [ ! -s $phase_file_path ] ; then
        echo "$APP has no docker options for $PHASE phase"
        exit 1
      fi

      display_options
    fi
  ;;

  # Add a docker option to application
  docker-options:add)
   [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    verify_app_name "$2"
    APP="$2"

    [[ -z $3 ]] && echo "Please specify a phase to add docker option to" && exit 1
    verify_phase "$3"
    PHASE="$3"

    shift 3

    [[ -z $@ ]] && echo "Please specify docker options to add to the phase" && exit 1
    OPTIONS_STRING=$@

    create_phase_file_path
    create_file 

    echo "$OPTIONS_STRING" >> $phase_file_path
    all_phase_options=`cat $phase_file_path`
    echo -e "$all_phase_options" | sed '/^$/d' | sort -u > $phase_file_path
  ;;

  # Remove a docker option from application
  docker-options:remove)
   [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    verify_app_name "$2"
    APP="$2"

    [[ -z $3 ]] && echo "Please specify a phase to remove docker option from" && exit 1
    verify_phase "$3"
    PHASE="$3"

    shift 3

    [[ -z $@ ]] && echo "Please specify docker options to remove from the phase" && exit 1
    OPTIONS_STRING=$@

    create_phase_file_path
    create_file

    all_phase_options=`cat $phase_file_path`
    all_phase_options=$(echo -e "${all_phase_options}" | sed "s#^${OPTIONS_STRING}\$##")
    echo -e "$all_phase_options" | sed '/^$/d' | sort -u > $phase_file_path
  ;;

  # Display usage help
  help)
    cat && cat<<EOF
    docker-options <app>                            Display apps docker options for all phases
    docker-options <app> <phase>                    Display apps docker options for given phase
    docker-options:add <app> <phase> OPTION         Add a docker option to an app for given phase
    docker-options:remove <app> <phase> OPTION      Remove a docker option from an app for given phase
EOF
  ;;

esac
